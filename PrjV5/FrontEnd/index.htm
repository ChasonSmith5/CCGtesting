<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Rules Filter</title>
    <link rel="icon" type="image/x-icon" href="favicon.ico">
    <link rel="stylesheet" href="rulesStyle2.css">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/knockout/3.5.1/knockout-latest.js"></script>
</head>
<body>
<div class="container">
    <p class="label">Filters:</p>
</div>
<div class="container">
<div class="button-container" data-bind="foreach: buttonSets">
    <div class="button-set">
        <!-- <button data-bind="click: leftButtonClick, style: { backgroundColor: leftButtonColor }">-</button> -->
        <button class="text-between" data-bind="text: textBetweenButtons, click: toggleFilter, style: { backgroundColor: filterBtn }"></button>
        <!-- <button data-bind="click: rightButtonClick, style: { backgroundColor: rightButtonColor }">+</button> -->
    </div>
</div>
</div>
<div class ="container">
    <div class="button-container2">
            <button class="clear-filters" id="ClearFilters">Clear Filters</button>
            <button class="clear-filters" id="settings">Go To Settings</button>
    </div>
</div>
<div class ="container">
    <div class="button-container3">
            <button class="databaseOp" id="getB">Get Rule</button>
            <button class="databaseOp" id="addB">Add Rule</button>
            <button class="databaseOp" id="editB">Edit Rule</button>
            <button class="databaseOp" id="deleteB">Delete Rule</button>
    </div>
</div>
<div class="container">
    <div class="get" id="get">
        <div class="get-cont">
            <select class="selectDB" id="getOptions">
                <option value=0>Choose a rule to use</option>
            </select>
            <button class ="dbb" id="getDB">Get</button>
        </div>
    </div>
    <div class="add" id="add">
        <div class="get-cont">
            <input class="dbb" type="text" placeholder="New Name" id="ruleName">
            <button class="dbb" id="addDB">Add</button>
        </div>
    </div>
    <div class="edit" id="edit">
        <div class="get-cont">
            <select class="selectDB" id="editOptions">
                <option value=0>Choose a rule to edit</option>
            </select>
            <input class="dbb" type="text" placeholder="New Name" id="editName">
            <button class="dbb" id="editDB">Edit</button>
        </div>
        
    </div>
    <div class="delete" id="delete">
        <div class="get-cont">
            <select class="selectDB" id="deleteOptions">
                <option value=0>Choose a rule to delete</option>
            </select>
            <button class="dbb" id="deleteDB">Delete</button>
        </div>
    </div>
</div>
<div class="container">
    <p class="warn" id="warn" data-bind="text: warningMessage"></p>
</div>
<script>
    function generateRandomString(length) {
        const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';
        let result = '';
        const charactersLength = characters.length;
        for (let i = 0; i < length; i++) {
            result += characters.charAt(Math.floor(Math.random() * charactersLength));
        }
        return result;
    }

    window.onload = function() {
        if (!window.location.hash) {
            // No hash fragment, generate and set one
            const randomString = generateRandomString(10);
            window.location.hash = randomString;
            const newUrl = 'index.htm' + window.location.hash;
            window.location.href = newUrl;
        }
    };
</script>
<script type="module" src="changeFilter.js"></script>
<!-- <script type="module" src="warnKO.js"></script> -->
<script type="module">
    import { ClearFilters } from "./rulesStorageManage.js";
    import { goToSettings } from "./toSettings.js";
    import { chooseGet, chooseAdd, chooseEdit, chooseDelete, getRule, addRule, editRule, deleteRule } from "./BackendUseage.js" ;
    // Wait for DOMContentLoaded event before calling nextRound
    document.addEventListener("DOMContentLoaded", function() {
      // Call nextRound when DOM is fully loaded
      document.getElementById("ClearFilters").addEventListener("click", ClearFilters);
      document.getElementById("settings").addEventListener("click", goToSettings);
      document.getElementById("getB").addEventListener("click", chooseGet);
      document.getElementById("addB").addEventListener("click", chooseAdd);
      document.getElementById("editB").addEventListener("click", chooseEdit);
      document.getElementById("deleteB").addEventListener("click", chooseDelete);
      document.getElementById("getDB").addEventListener("click", async () => { await getRule(); });
      document.getElementById("addDB").addEventListener("click", async () => { await addRule(); });
      document.getElementById("editDB").addEventListener("click", async () => { await editRule(); });
      document.getElementById("deleteDB").addEventListener("click", async () => { await deleteRule(); });
    });
</script>

</body>
</html>
